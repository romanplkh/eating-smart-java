/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Models.Calories;
import Models.MainNutrients;
import Models.Nutrients;
import eatingsmart_nb.API;
import eatingsmart_nb.Controller;
import eatingsmart_nb.MongoDB;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.labels.PieSectionLabelGenerator;
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Roman
 */
public class AppForm extends javax.swing.JFrame {

    Controller app;

    final String QUANTITY = "quantity";
    final String UNIT = "unit";
    final String LABEL = "label";

    /**
     * Creates new form AppForm
     */
    public AppForm() {
        initComponents();
        app = new Controller(new MongoDB("EatingSmart", "Nutrients"), new API());

        panLabel.setVisible(false);

        //DATASET BAR
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.setValue(46, "Gold medals", "USA");
        dataset.setValue(38, "Gold medals", "China");
        dataset.setValue(29, "Gold medals", "UK");
        dataset.setValue(22, "Gold medals", "Russia");
        dataset.setValue(13, "Gold medals", "South Korea");
        dataset.setValue(11, "Gold medals", "Germany");

        //BAR CONFIG
        JFreeChart bar = ChartFactory.createBarChart("My Bar", "Text1", "Gold medals", dataset, PlotOrientation.VERTICAL, false, true, false);

        ChartPanel cp2 = new ChartPanel(bar);
        cp2.setSize(250, 250);
        panBar.add(cp2);
        testPanel.validate();

        cp2.setMaximumDrawHeight(300);
        cp2.setMaximumDrawWidth(300);
        cp2.getParent().invalidate();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        jLabel1 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        grdNutrients = new javax.swing.JTable();
        panLabel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblCalories = new javax.swing.JLabel();
        lblFat = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblSatD = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator8 = new javax.swing.JSeparator();
        jSeparator9 = new javax.swing.JSeparator();
        lblMonoD = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblPolyD = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel21 = new javax.swing.JLabel();
        jSeparator10 = new javax.swing.JSeparator();
        lblCarbsD = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jSeparator11 = new javax.swing.JSeparator();
        lblProteinD = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jSeparator12 = new javax.swing.JSeparator();
        lblFiberD = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jSeparator13 = new javax.swing.JSeparator();
        lblSugarD = new javax.swing.JLabel();
        lblFatMg = new javax.swing.JLabel();
        lblSaturatedMg = new javax.swing.JLabel();
        lblMonoG = new javax.swing.JLabel();
        lblPolyG = new javax.swing.JLabel();
        lblCarbG = new javax.swing.JLabel();
        lblProteinG = new javax.swing.JLabel();
        lblFiberG = new javax.swing.JLabel();
        lblSugarG = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        testPanel = new javax.swing.JPanel();
        panBar = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        jMenu3.setText("jMenu3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Rockwell", 1, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Eating Smart");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        grdNutrients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Label", "Quantity", "Unit"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(grdNutrients);

        jTabbedPane1.addTab("Vitamins", jScrollPane2);

        panLabel.setBackground(new java.awt.Color(255, 255, 255));
        panLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        panLabel.setDoubleBuffered(false);
        panLabel.setMaximumSize(new java.awt.Dimension(200, 200));
        panLabel.setName("panLabel"); // NOI18N
        panLabel.setPreferredSize(new java.awt.Dimension(300, 300));
        panLabel.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Nutrition Facts");
        panLabel.add(jLabel3);
        jLabel3.setBounds(0, 10, 290, 36);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Calories");
        panLabel.add(jLabel2);
        jLabel2.setBounds(22, 89, 72, 20);

        lblCalories.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblCalories.setText("CaloriesAmt");
        panLabel.add(lblCalories);
        lblCalories.setBounds(160, 90, 110, 20);

        lblFat.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblFat.setText("lblFatD");
        lblFat.setAlignmentX(0.5F);
        panLabel.add(lblFat);
        lblFat.setBounds(210, 150, 60, 15);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setText("Fat");
        jLabel20.setAlignmentX(0.5F);
        panLabel.add(jLabel20);
        jLabel20.setBounds(20, 150, 29, 17);

        jLabel4.setText("Saturated");
        jLabel4.setAlignmentX(0.5F);
        panLabel.add(jLabel4);
        jLabel4.setBounds(30, 180, 70, 14);

        lblSatD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblSatD.setText("jLabel5");
        lblSatD.setAlignmentX(0.5F);
        panLabel.add(lblSatD);
        lblSatD.setBounds(210, 180, 50, 15);

        jLabel6.setText("Monosaturated");
        jLabel6.setAlignmentX(0.5F);
        panLabel.add(jLabel6);
        jLabel6.setBounds(30, 210, 90, 14);

        jSeparator6.setDoubleBuffered(true);
        jSeparator6.setMinimumSize(new java.awt.Dimension(300, 2));
        panLabel.add(jSeparator6);
        jSeparator6.setBounds(20, 170, 250, 10);

        jSeparator8.setDoubleBuffered(true);
        panLabel.add(jSeparator8);
        jSeparator8.setBounds(30, 200, 240, 10);

        jSeparator9.setDoubleBuffered(true);
        panLabel.add(jSeparator9);
        jSeparator9.setBounds(30, 230, 240, 10);

        lblMonoD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMonoD.setText("jLabel7");
        lblMonoD.setAlignmentX(0.5F);
        panLabel.add(lblMonoD);
        lblMonoD.setBounds(210, 210, 50, 15);

        jLabel8.setText("Polysaturated");
        jLabel8.setAlignmentX(0.5F);
        panLabel.add(jLabel8);
        jLabel8.setBounds(30, 240, 80, 14);

        lblPolyD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPolyD.setText("jLabel9");
        lblPolyD.setAlignmentX(0.5F);
        panLabel.add(lblPolyD);
        lblPolyD.setBounds(210, 240, 50, 15);

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        panLabel.add(jSeparator2);
        jSeparator2.setBounds(22, 115, 250, 10);

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jSeparator1.setPreferredSize(new java.awt.Dimension(50, 20));
        panLabel.add(jSeparator1);
        jSeparator1.setBounds(22, 62, 260, 20);
        panLabel.add(jSeparator3);
        jSeparator3.setBounds(30, 260, 240, 10);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel21.setText("Carbohydrates");
        jLabel21.setAlignmentX(0.5F);
        panLabel.add(jLabel21);
        jLabel21.setBounds(20, 270, 110, 17);

        jSeparator10.setDoubleBuffered(true);
        panLabel.add(jSeparator10);
        jSeparator10.setBounds(20, 290, 252, 2);

        lblCarbsD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCarbsD.setText("jLabel10");
        panLabel.add(lblCarbsD);
        lblCarbsD.setBounds(210, 270, 60, 15);

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel22.setText("Protein");
        jLabel22.setAlignmentX(0.5F);
        panLabel.add(jLabel22);
        jLabel22.setBounds(20, 300, 50, 17);

        jSeparator11.setDoubleBuffered(true);
        panLabel.add(jSeparator11);
        jSeparator11.setBounds(20, 320, 252, 2);

        lblProteinD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblProteinD.setText("jLabel10");
        panLabel.add(lblProteinD);
        lblProteinD.setBounds(210, 300, 60, 15);

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel24.setText("Fiber");
        jLabel24.setAlignmentX(0.5F);
        panLabel.add(jLabel24);
        jLabel24.setBounds(20, 330, 40, 17);

        jSeparator12.setDoubleBuffered(true);
        panLabel.add(jSeparator12);
        jSeparator12.setBounds(20, 350, 252, 2);

        lblFiberD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblFiberD.setText("jLabel10");
        panLabel.add(lblFiberD);
        lblFiberD.setBounds(210, 330, 60, 15);

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel26.setText("Sugar");
        jLabel26.setAlignmentX(0.5F);
        panLabel.add(jLabel26);
        jLabel26.setBounds(20, 360, 50, 17);

        jSeparator13.setDoubleBuffered(true);
        panLabel.add(jSeparator13);
        jSeparator13.setBounds(20, 380, 252, 2);

        lblSugarD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblSugarD.setText("jLabel10");
        panLabel.add(lblSugarD);
        lblSugarD.setBounds(210, 360, 60, 15);

        lblFatMg.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblFatMg.setText("jLabel30");
        panLabel.add(lblFatMg);
        lblFatMg.setBounds(60, 150, 52, 15);

        lblSaturatedMg.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblSaturatedMg.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSaturatedMg.setText("jLabel31");
        lblSaturatedMg.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        panLabel.add(lblSaturatedMg);
        lblSaturatedMg.setBounds(130, 180, 70, 15);

        lblMonoG.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMonoG.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblMonoG.setText("jLabel32");
        lblMonoG.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        panLabel.add(lblMonoG);
        lblMonoG.setBounds(130, 210, 60, 15);

        lblPolyG.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPolyG.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblPolyG.setText("jLabel33");
        lblPolyG.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        panLabel.add(lblPolyG);
        lblPolyG.setBounds(130, 240, 60, 15);

        lblCarbG.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCarbG.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblCarbG.setText("jLabel34");
        lblCarbG.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        panLabel.add(lblCarbG);
        lblCarbG.setBounds(140, 270, 60, 14);

        lblProteinG.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblProteinG.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblProteinG.setText("jLabel35");
        panLabel.add(lblProteinG);
        lblProteinG.setBounds(90, 300, 70, 15);

        lblFiberG.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblFiberG.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblFiberG.setText("jLabel36");
        panLabel.add(lblFiberG);
        lblFiberG.setBounds(90, 330, 60, 15);

        lblSugarG.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblSugarG.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSugarG.setText("jLabel37");
        panLabel.add(lblSugarG);
        lblSugarG.setBounds(90, 360, 60, 15);

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel39.setText("%Daily Value *");
        panLabel.add(jLabel39);
        jLabel39.setBounds(180, 130, 90, 14);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("* Percent Daily Values are based on a 2000 calorie diet");
        panLabel.add(jLabel7);
        jLabel7.setBounds(20, 400, 240, 11);

        testPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        testPanel.setPreferredSize(new java.awt.Dimension(300, 300));

        javax.swing.GroupLayout testPanelLayout = new javax.swing.GroupLayout(testPanel);
        testPanel.setLayout(testPanelLayout);
        testPanelLayout.setHorizontalGroup(
            testPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );
        testPanelLayout.setVerticalGroup(
            testPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 217, Short.MAX_VALUE)
        );

        panBar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout panBarLayout = new javax.swing.GroupLayout(panBar);
        panBar.setLayout(panBarLayout);
        panBarLayout.setHorizontalGroup(
            panBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panBarLayout.setVerticalGroup(
            panBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 232, Short.MAX_VALUE)
        );

        jMenu1.setText("File");

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Info");

        jMenuItem2.setText("About");
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(791, Short.MAX_VALUE)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(panLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(testPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 49, Short.MAX_VALUE)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(96, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(testPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //GET NUTRITIONS LABEL
    private void getLabel(Nutrients n) {
        panLabel.setVisible(true);

        NumberFormat num = NumberFormat.getNumberInstance();
        num.setMaximumFractionDigits(2);

        MainNutrients mnd = n.getMainNutrientsDaily();
        MainNutrients mng = n.getMainNutrientsGramms();
        Calories cal = n.getCalories();

        // System.out.println(mnd.getCarbs().get(AMOUNT));
        lblFatMg.setText(mng.getFatGeneral() != null ? num.format(mng.getFatGeneral().get(QUANTITY)) + " g" : "");
        lblCalories.setText(mng.getEnergy() != null ? num.format(mng.getEnergy().get(QUANTITY)) + " g" : "");
        lblCarbG.setText(mng.getCarbs() != null ? num.format(mng.getCarbs().get(QUANTITY)) + " g" : "");
        lblFiberG.setText(mng.getFiber() != null ? num.format(mng.getFiber().get(QUANTITY)) + " g" : "");
        lblMonoG.setText(mng.getFatMonosatured() != null ? num.format(mng.getFatMonosatured().get(QUANTITY)) + " g" : "");
        lblPolyG.setText(mng.getFatPolysatured() != null ? num.format(mng.getFatPolysatured().get(QUANTITY)) + " g" : "");
        lblProteinG.setText(mng.getProtein() != null ? num.format(mng.getProtein().get(QUANTITY)) + " g" : "");
        lblSaturatedMg.setText(mng.getFatSatured() != null ? num.format(mng.getFatSatured().get(QUANTITY)) + " g" : "");
        lblSugarG.setText(mng.getSugar() != null ? num.format(mng.getSugar().get(QUANTITY)) + " g" : "");
        lblCarbG.setText(mng.getCarbs() != null ? num.format(mng.getCarbs().get(QUANTITY)) + " g" : "");

        lblFat.setText(mnd.getFatGeneral() != null ? num.format(mnd.getFatGeneral().get(QUANTITY)) + " %" : "");
        lblCalories.setText(mnd.getEnergy() != null ? num.format(mnd.getEnergy().get(QUANTITY)) + " %" : "");
        lblCarbsD.setText(mnd.getCarbs() != null ? num.format(mnd.getCarbs().get(QUANTITY)) + " %" : "");
        lblFiberD.setText(mnd.getFiber() != null ? num.format(mnd.getFiber().get(QUANTITY)) + " %" : "");
        lblMonoD.setText(mnd.getFatMonosatured() != null ? num.format(mnd.getFatMonosatured().get(QUANTITY)) + " %" : "");
        lblPolyD.setText(mnd.getFatPolysatured() != null ? num.format(mnd.getFatPolysatured().get(QUANTITY)) + " %" : "");
        lblProteinD.setText(mnd.getProtein() != null ? num.format(mnd.getProtein().get(QUANTITY)) + " %" : "");
        lblSatD.setText(mnd.getFatSatured() != null ? num.format(mnd.getFatSatured().get(QUANTITY)) + " %" : "");
        lblSugarD.setText(mnd.getSugar() != null ? num.format(mnd.getSugar().get(QUANTITY)) + " %" : "");
        lblCarbsD.setText(mng.getCarbs() != null ? num.format(mng.getCarbs().get(QUANTITY)) + " %" : "");

    }

    //PIE CHART CALORIES PROPORTION
    private void getCaloriesProportion(Calories cal) {
        //DATASET PIE

        double carbsData = Double.valueOf(cal.getCarbsCal().get(QUANTITY).toString());
        double energyData = Double.valueOf(cal.getEnergyCal().get(QUANTITY).toString());
        double fatData = Double.valueOf(cal.getFatCal().get(QUANTITY).toString());
        double proteinData = Double.valueOf(cal.getPreteinCal().get(QUANTITY).toString());

        DefaultPieDataset data = new DefaultKeyedValuesDataset();
        data.setValue("Protein", proteinData);
        data.setValue("Fat", fatData);
        data.setValue("Carbohydrates", carbsData);
        data.setValue("Energy", energyData);

// create a chart...
        JFreeChart chart = ChartFactory.createPieChart(
                "Calories Proportion",
                data,
                true, // legend?
                true, // tooltips?
                false // URLs?
        );
        
          PiePlot plot = (PiePlot) chart.getPlot();
          
              PieSectionLabelGenerator gen = new StandardPieSectionLabelGenerator(
            "{0}: {1} ({2})", new DecimalFormat("0"), new DecimalFormat("0%"));
        plot.setLabelGenerator(gen);

        //PIE CONFIG
        ChartPanel myChart = new ChartPanel(chart);
        myChart.setMouseWheelEnabled(true);
        myChart.setSize(250, 300);

        testPanel.add(myChart);
        testPanel.validate();

        myChart.setMaximumDrawHeight(250);
        myChart.setMaximumDrawWidth(300);
        myChart.getParent().invalidate();

    }


    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        //Click Event in C#
        //Create Message Box 

        try {

            //GET VALUE FROM FROM FIELD SEARCH
            String srchWord = txtSearch.getText();

            //SEARCH
            Nutrients nutrients = app.queryData(srchWord);

            if (nutrients != null) {

                //PRINT LABEL 
                this.getLabel(nutrients);

                //SHOW CHARTS 
                
                getCaloriesProportion(nutrients.getCalories());
                //SHOW VITAMINS
                //Table 
                DefaultTableModel tableModel = (DefaultTableModel) grdNutrients.getModel();

                //RowData
                Object rowData[] = new Object[4];

                nutrients.getVitaminsCollection().entrySet().stream().forEach(entry -> {
                    rowData[0] = entry.getValue().getLabel();
                    rowData[1] = entry.getValue().getQuantity();
                    rowData[2] = entry.getValue().getUnit();
                    tableModel.addRow(rowData);
                });

                grdNutrients.setAutoCreateRowSorter(true);

            }

//            //ADD DATA TO LISTBOX
//            List<String> vitamins = new ArrayList();
//            nutrients.getVitaminsCollection().entrySet().stream().forEach(entry -> {
//                //System.out.println(entry.getValue().getQuantity() + " " + entry.getValue().getLabel());
//            });
//
//            //Listbox and combo use DefaultListModel
//            DefaultListModel listModel = new DefaultListModel();
//
//            Collections.sort(vitamins);
//            for (String s : vitamins) {
//                listModel.addElement(s);
//            }
            //lstVitamins.setModel(listModel);
            ////////////////////////////////TTTTTTTTTTTTTTTTTTTTAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBLLLLLLLLLLEEEEEE
        } catch (Exception e) {

            JOptionPane.showMessageDialog(this, e.getMessage());
        }


    }//GEN-LAST:event_btnSearchActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        setVisible(false); //you can't see me!
        dispose(); //Destroy the JFrame object
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppForm().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JTable grdNutrients;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblCalories;
    private javax.swing.JLabel lblCarbG;
    private javax.swing.JLabel lblCarbsD;
    private javax.swing.JLabel lblFat;
    private javax.swing.JLabel lblFatMg;
    private javax.swing.JLabel lblFiberD;
    private javax.swing.JLabel lblFiberG;
    private javax.swing.JLabel lblMonoD;
    private javax.swing.JLabel lblMonoG;
    private javax.swing.JLabel lblPolyD;
    private javax.swing.JLabel lblPolyG;
    private javax.swing.JLabel lblProteinD;
    private javax.swing.JLabel lblProteinG;
    private javax.swing.JLabel lblSatD;
    private javax.swing.JLabel lblSaturatedMg;
    private javax.swing.JLabel lblSugarD;
    private javax.swing.JLabel lblSugarG;
    private javax.swing.JPanel panBar;
    private javax.swing.JPanel panLabel;
    private javax.swing.JPanel testPanel;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
